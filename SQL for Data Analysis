SQL FOR DATA ANALYSIS

SQL is easy to understand.
Traditional databases allow us to access data directly.
Traditional databases allow us to audit and replicate our data.
SQL is a great tool for analyzing multiple tables at once.
SQL allows you to analyze more complex questions than dashboard tools like Google Analytics.

The key to SQL is understanding statements. A few statements include:
CREATE TABLE is a statement that creates a new table in a database.
DROP TABLE is a statement that removes a table in a database.
SELECT allows you to read data and display it. This is called a query.

SELECT indicates which column(s) you want to be given the data for.
FROM specifies from which table(s) you want to select the columns. Notice the columns need to exist in this table.

If you want to be provided with the data from all columns in the table, you use "*", like so:  SELECT * FROM orders
SQL queries are not case-sensitive. The following query:
SELECT account_id
FROM orders
is the same as:
select account_id
from orders
which is also the same as:
SeLeCt AcCoUnt_id
FrOm oRdErS

Use White Space in Queries
SQL queries ignore spaces, so you can add as many spaces and blank lines between code as you want, and the queries are the same. This query
SELECT account_id FROM orders
is equivalent to this query:
SELECT account_id
FROM orders
and this query (but please don't ever write queries like this):
SELECT              account_id
FROM               orders

Semicolons
Depending on your SQL environment, your query may need a semicolon at the end to execute. Other environments are more flexible in terms of this being a "requirement." It is considered best practice to put a semicolon at the end of each statement, which also allows you to run multiple queries at once if your environment allows this.
Best practice:
SELECT account_id
FROM orders;
Since our environment here doesn't require it, you will see solutions written without the semicolon:
SELECT account_id
FROM orders
The LIMIT statement is useful when you want to see just the first few rows of a table. This can be much faster for loading than if we load the entire dataset.
The LIMIT command is always the very last part of a query. An example of showing just the first 10 rows of the orders table with all of the columns might look like the following:
SELECT *
FROM orders
LIMIT 10;




